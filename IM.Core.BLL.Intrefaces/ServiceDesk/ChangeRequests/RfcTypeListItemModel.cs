using System;

namespace InfraManager.BLL.ServiceDesk.ChangeRequests
{
    /// <summary>
    /// Этот класс представляет модель данных элемента списка RFC Type    
    /// (Почему не DTO?). DTO - это совсем из другой оперы
    /// DTO это объект, который агрегирует в себе данные из разных источников и служит для передачи
    /// по сети с целью сократить к-во обращений 
    /// (именно по сети, потому что вызов метода и получение данных из метода не является дорогостоящей операцией)
    /// (т.е. отдать все данные одним запросом вместо того, чтобы обрабатывать 2 и более)
    /// Когда и где у нас может возникнуть DTO?
    /// На уровне контроллера. Когда сознательно в ущерб поддерживаемости,
    /// но для достижения быстродействия (которого нельзя достичь иначе) мы сделаем 1 HTTP-ресурс,
    /// запрос на который вернет набор данных, который до этого возвращался несколькими другими ресурсами.
    /// </summary>
    public class RfcTypeListItemModel : RfcTypeModel // это наследование в общем случае не является обязательным
    {
        /// <summary>
        /// Возвращает идентификатор типа рабочей процедуры
        /// </summary>
        public Guid ID { get; init; }

        // TODO: Решить как отдавать изображение на фронт, предлагаю сделать base64 строку т.к иконки будут маленькие.
        // контр предлагаю ... у любой иконки есть href, задача этого контракта отдать все что нужно для формирования href на клиенте
        // загрузка этой картинки это уже задача браузера и другого HTTP-ресурса. Необходимо позаботиться о том, чтобы
        // создаваемые api ресурсы могли быть повторно использованы и не факт, что во всех случаях эти картинки нужны
    }
}
