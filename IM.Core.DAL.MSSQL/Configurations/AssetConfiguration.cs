// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>

using InfraManager.DAL.EntityConfigurations;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore;

namespace InfraManager.DAL.Microsoft.SqlServer.Configurations
{
    public partial class AssetConfiguration : AssetConfigurationBase
    {
        protected override string PrimaryKeyName => "PK_Asset";
        protected override string UserForeignKeyName => "FK_Asset_Пользователи";
        protected override string LifeCycleStateForeignKeyName => "FK_Asset_LifeCycleState";
        protected override string FixedAssetForeignKeyName => "FK_Asset_FixedAsset";
        protected override string StorageLocationForeignKeyName => "FK_Asset_Storage";
        protected override string SupplierForeignKeyName => "FK_Asset_Supplier";
        protected override string ServiceCenterForeignKeyName => "FK_Asset_ServiceCenter";
        protected override string ServiceContractForeignKeyName => "FK_Asset_ServiceContract";
        protected override string LifeCycleStateIDIndexName => "IX_Asset_LifeCycleStateID";
        protected override string FixedAssetIDIndexName => "IX_Asset_FixedAssetID";
        protected override string AssetIDIndexName => "IX_Asset_ID";
        protected override string OwnerIDIndexName => "IX_Asset_OwnerID";
        protected override string UtilizerIDIndexName => "IX_Asset_UtilizerID";
        protected override string UserIDIndexName => "IX_Asset_UserID";
        protected override string SupplierIDIndexName => "SupplierID";

        protected override void ConfigureDatabase(EntityTypeBuilder<Asset.Asset> builder)
        {
            builder.ToTable("Asset", "dbo");
            
            builder.Property(x => x.DeviceID).HasColumnName("DeviceID");
            builder.Property(x => x.DateReceived).HasColumnName("DateReceived").HasColumnType("datetime");
            builder.Property(x => x.Agreement).HasColumnName("Agreement");
            builder.Property(x => x.SupplierID).HasColumnName("SupplierID");
            builder.Property(x => x.Warranty).HasColumnName("Warranty").HasColumnType("datetime");
            builder.Property(x => x.ServiceContractID).HasColumnName("ServiceContractID");
            builder.Property(x => x.UserID).HasColumnName("UserID");
            builder.Property(x => x.Cost).HasColumnName("Cost").HasColumnType("decimal(12, 2)");
            builder.Property(x => x.Founding).HasColumnName("Founding");
            builder.Property(x => x.AppointmentDate).HasColumnName("AppointmentDate").HasColumnType("datetime");
            builder.Property(x => x.UserField1).HasColumnName("UserField1");
            builder.Property(x => x.UserField2).HasColumnName("UserField2");
            builder.Property(x => x.UserField3).HasColumnName("UserField3");
            builder.Property(x => x.UserField4).HasColumnName("UserField4");
            builder.Property(x => x.UserField5).HasColumnName("UserField5");
            builder.Property(x => x.OnStore).HasColumnName("onStore").HasDefaultValueSql("1");
            builder.Property(x => x.ID).HasColumnName("ID").HasDefaultValueSql("newid()");
            builder.Property(x => x.DateInquiry).HasColumnName("DateInquiry").HasColumnType("datetime");
            builder.Property(x => x.OwnerID).HasColumnName("OwnerID");
            builder.Property(x => x.OwnerClassID).HasColumnName("OwnerClassID");
            builder.Property(x => x.UtilizerID).HasColumnName("UtilizerID");
            builder.Property(x => x.UtilizerClassID).HasColumnName("UtilizerClassID");
            builder.Property(x => x.PeripheralDatabaseID).HasColumnName("PeripheralDatabaseID");
            builder.Property(x => x.ComplementaryID).HasColumnName("ComplementaryID");
            builder.Property(x => x.ComplementaryGuidID).HasColumnName("ComplementaryGuidID");
            builder.Property(x => x.IsWorking).HasColumnName("IsWorking");
            builder.Property(x => x.DateAnnuled).HasColumnName("DateAnnuled").HasColumnType("datetime");
            builder.Property(x => x.LifeCycleStateID).HasColumnName("LifeCycleStateID");
            builder.Property(x => x.FixedAssetID).HasColumnName("FixedAssetID");
            builder.Property(x => x.GoodsInvoiceID).HasColumnName("GoodsInvoiceID");
            builder.Property(x => x.ServiceCenterID).HasColumnName("ServiceCenterID");
            builder.Property(x => x.StorageID).HasColumnName("StorageID");
            builder.Property(x => x.tstamp)
            .HasColumnName("tstamp")
            .IsRowVersion()
            .IsRequired(true)
            .HasColumnType("timestamp");
        }
    }
}
