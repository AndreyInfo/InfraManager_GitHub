// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using InfraManager.DAL.Software;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore;


namespace InfraManager.DAL.Microsoft.SqlServer.Configurations
{
    public partial class SoftwareTypeConfiguration : IEntityTypeConfiguration<SoftwareType>
    {
        public void Configure(EntityTypeBuilder<SoftwareType> entity)
        {
            entity.ToTable("SoftwareType", "dbo");

            entity.HasIndex(e => e.ParentId, "IX_SoftwareType_ParentID");

            entity.Property(e => e.ID)
                .ValueGeneratedNever()
                .HasColumnName("ID")
                .HasComment("Идентификатор типа ПО");

            entity.Property(e => e.ComplementaryId).HasColumnName("ComplementaryID");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(250)
                .HasComment("Название типа ПО");

            entity.Property(e => e.Note)
                .IsRequired()
                .HasMaxLength(500)
                .HasComment("Описание типа ПО");

            entity.Property(e => e.ParentId)
                .HasColumnName("ParentID")
                .HasComment("Ссылка на родительский тип ПО");

            entity.Property(e => e.RowVersion)
                .IsRequired()
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasComment("Версия строки");

            entity.HasOne(d => d.Parent)
                .WithMany(p => p.InverseParent)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK_SoftwareType_SoftwareType");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<SoftwareType> entity);
    }
}
