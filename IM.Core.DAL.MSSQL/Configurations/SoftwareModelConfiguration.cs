// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using InfraManager.DAL.Software;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore;
using InfraManager.DAL.EntityConfigurations;

namespace InfraManager.DAL.Microsoft.SqlServer.Configurations
{
    public partial class SoftwareModelConfiguration : SoftwareModelConfigurationBase
    {
        protected override string KeyName => "PK_SoftwareModel";

        protected override void ConfigureDataBase(EntityTypeBuilder<SoftwareModel> builder)
        {
            builder.ToTable("SoftwareModel", "dbo");

            builder.HasIndex(e => e.CommercialModelID, "IX_SoftwareModel_CommercialModelID");

            builder.HasIndex(e => e.IsCommercial, "IX_SoftwareModel_IsCommercial");

            builder.HasIndex(e => e.ManufacturerID, "IX_SoftwareModel_ManufacturerID");

            builder.HasIndex(e => e.ParentID, "IX_SoftwareModel_ParentID");

            builder.HasIndex(e => e.Removed, "IX_SoftwareModel_Removed");

            builder.HasIndex(e => e.SoftwareModelUsingTypeID, "IX_SoftwareModel_SoftwareModelUsingTypeID");

            builder.HasIndex(e => e.SoftwareTypeID, "IX_SoftwareModel_SoftwareTypeID");

            builder.HasIndex(e => e.TrueID, "IX_SoftwareModel_TrueID");


            builder.Property(e => e.ID).HasColumnName("ID");
            builder.Property(e => e.SoftwareTypeID).HasColumnName("SoftwareTypeID");
            builder.Property(e => e.Name).HasColumnName("Name");
            builder.Property(e => e.Note).HasColumnName("Note");
            builder.Property(e => e.Version).HasColumnName("Version");
            builder.Property(e => e.Code).HasColumnName("Code");
            builder.Property(e => e.ManufacturerID).HasColumnName("ManufacturerID");
            builder.Property(e => e.SupportDate).HasColumnName("SupportDate");
            builder.Property(e => e.Template).HasColumnName("Template");
            builder.Property(e => e.Removed).HasColumnName("Removed");
            builder.Property(e => e.ParentID).HasColumnName("ParentID");
            builder.Property(e => e.TrueID).HasColumnName("TrueID");
            builder.Property(e => e.CreateDate).HasColumnName("CreateDate").HasColumnType("datetime");
            builder.Property(e => e.SoftwareModelUsingTypeID).HasColumnName("SoftwareModelUsingTypeID");
            builder.Property(e => e.IsCommercial).HasColumnName("IsCommercial");
            builder.Property(e => e.CommercialModelID).HasColumnName("CommercialModelID");
            builder.Property(e => e.ProcessNames).HasColumnName("ProcessNames");
            builder.Property(e => e.ExternalID).HasColumnName("ExternalID");
            builder.Property(e => e.UtcDateCreated).HasColumnName("UtcDateCreated").HasColumnType("datetime");
            builder.Property(e => e.ModelRedaction).HasColumnName("ModelRedaction");
            builder.Property(e => e.OwnerModelID).HasColumnName("OwnerModelID");
            builder.Property(e => e.OwnerModelClassID).HasColumnName("OwnerModelClassID");
            builder.Property(e => e.ModelDistribution).HasColumnName("ModelDistribution");
            builder.Property(e => e.PercentComponent).HasColumnName("PercentComponent");
            builder.Property(e => e.ComplementaryID).HasColumnName("ComplementaryID");
            builder.Property(e => e.RowVersion).HasColumnName("RowVersion");
            builder.Property(e => e.RowVersion)
                .IsRequired()
                .IsRowVersion()
                .HasColumnType("timestamp")
                .HasColumnName("RowVersion"); ;
        }
    }
}
