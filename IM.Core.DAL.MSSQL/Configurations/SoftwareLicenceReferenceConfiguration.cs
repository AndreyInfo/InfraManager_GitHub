// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using InfraManager.DAL.Software;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore;

namespace InfraManager.DAL.Microsoft.SqlServer.Configurations
{
    public partial class SoftwareLicenceReferenceConfiguration : IEntityTypeConfiguration<SoftwareLicenceReference>
    {
        public void Configure(EntityTypeBuilder<SoftwareLicenceReference> entity)
        {
            entity.ToTable("SoftwareLicenceReference", "dbo");
            entity.HasKey(e => new { e.ObjectId, e.ClassId, e.SoftwareLicenceId })
                .HasName("PK__SoftwareLicenceReference");

            entity.HasIndex(e => new { e.SoftwareLicenceId, e.ObjectId, e.SoftwareSubLicenceId }, "FK_SoftwareLicenceReference")
                .IsUnique();

            entity.HasIndex(e => e.ObjectId, "IX_SoftwareLicenceReference_ObjectID");

            entity.HasIndex(e => e.SoftwareLicenceId, "IX_SoftwareLicenceReference_SoftwareLicenceID");

            entity.HasIndex(e => e.SoftwareLicenceSerialNumberId, "IX_SoftwareLicenceReference_SoftwareLicenceSerialNumberID");

            entity.Property(e => e.ObjectId)
                .HasColumnName("ObjectID")
                .HasComment("Ссылка лицензии на внешний объект (оборудование, либо пользователя)");

            entity.Property(e => e.ClassId)
                .HasColumnName("ClassID")
                .HasComment("Класс объекта");

            entity.Property(e => e.SoftwareLicenceId)
                .HasColumnName("SoftwareLicenceID")
                .HasComment("Идентификатор лицензии ПО");

            entity.Property(e => e.PeripheralDatabaseId).HasColumnName("PeripheralDatabaseID");

            entity.Property(e => e.SoftwareLicenceSerialNumberId).HasColumnName("SoftwareLicenceSerialNumberID");

            entity.Property(e => e.SoftwareSubLicenceId).HasColumnName("SoftwareSubLicenceID");

            entity.Property(e => e.UniqueNumber)
                .IsRequired()
                .HasMaxLength(500);

            entity.HasOne(d => d.SoftwareLicence)
                .WithMany(p => p.SoftwareLicenceReference)
                .HasForeignKey(d => d.SoftwareLicenceId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SoftwareLicenceReference_SoftwareLicence");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<SoftwareLicenceReference> entity);
    }
}
