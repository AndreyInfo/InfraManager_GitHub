// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore;
using InfraManager.DAL.Asset;
using InfraManager.DAL.EntityConfigurations;
using IM.Core.DAL.Microsoft.SqlServer;

namespace InfraManager.DAL.Microsoft.SqlServer.Configurations
{
    internal sealed class TerminalDeviceModelConfiguration : TerminalDeviceModelConfigurationBase
    {
        protected override string PrimaryKeyName => "PK_Типы оконечного оборудования";
        protected override string VendorForeignKeyName => "FK_Типы оконечного оборудования_Производители";
        protected override string ProductCatalogTypeForeignKeyName => "FK_TerminalDeviceModel_ProductCatalogType";
        protected override string HypervisorModelForeignKeyName => "FK_TerminalDeviceType_HypervisorModel";
        protected override string IMObjIDIndexName => "IX_TerminalDeviceModel_IMObjID";
        protected override string ProductCatalogTypeIDIndexName => "IX_TerminalDeviceModel_ProductCatalogTypeID";
        protected override string DefaultValueIMObjID => "newid()";
        protected override string DefaultValueID => "NEXT VALUE FOR [pk_terminal_equipment_types_seq]";
        protected override string ConnectorTypeForeignKeyName => "FK_TerminalDeviceModel_ConnectorType";
        protected override string TechnologyTypeForeignKeyName => "FK_TerminalDeviceModel_TechnologyType";

        protected override void ConfigureDatabase(EntityTypeBuilder<TerminalDeviceModel> builder)
        {
            builder.ToTable("Типы оконечного оборудования", Options.Scheme);
            
            builder.Property(e => e.ID).HasColumnName("Идентификатор");
            builder.Property(e => e.Name).HasColumnName("Название");
            builder.Property(e => e.ManufacturerID).HasColumnName("ИД производителя");
            builder.Property(e => e.ConnectorTypeID).HasColumnName("ИД разъема");
            builder.Property(e => e.TechnologyTypeID).HasColumnName("ИД технологии");
            builder.Property(e => e.ImageCyrillic).HasColumnName("Изображение");
            builder.Property(e => e.ProductNumberCyrillic).HasColumnName("Номер продукта");
            builder.Property(e => e.ProductNumber).HasColumnName("ProductNumber");
            builder.Property(e => e.ExternalID).HasColumnName("ExternalID").HasDefaultValueSql("(N'Оконечное оборудование')");
            builder.Property(e => e.Code).HasColumnName("Code");
            builder.Property(e => e.Note).HasColumnName("Note");
            builder.Property(e => e.Removed).HasColumnName("Removed");
            builder.Property(e => e.IMObjID).HasColumnName("IMObjID").HasDefaultValueSql();
            builder.Property(e => e.ComplementaryID).HasColumnName("ComplementaryID");
            builder.Property(e => e.HypervisorModelID).HasColumnName("HypervisorModelID");
            builder.Property(e => e.ProductCatalogTypeID).HasColumnName("ProductCatalogTypeID");
            builder.Property(e => e.RowVersion).HasColumnName("RowVersion").HasColumnType("timestamp").IsRowVersion();
            builder.Property(e => e.CanBuy).HasColumnName("CanBuy");
        }
    }
}